
LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003c6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000e  00800060  000003c6  0000043a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000448  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000478  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000d0  00000000  00000000  000004b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000e88  00000000  00000000  00000584  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000077f  00000000  00000000  0000140c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000768  00000000  00000000  00001b8b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001bc  00000000  00000000  000022f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004d0  00000000  00000000  000024b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b92  00000000  00000000  00002980  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a0  00000000  00000000  00003512  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 ec       	ldi	r30, 0xC6	; 198
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 36       	cpi	r26, 0x6E	; 110
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 da 01 	call	0x3b4	; 0x3b4 <main>
  7a:	0c 94 e1 01 	jmp	0x3c2	; 0x3c2 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <Dio_SetPinDirection>:
		break;
		case DIO_PORTC:
		TOG_BIT(PORTC,pin);
		break;
		case DIO_PORTD:
		TOG_BIT(PORTD,pin);
  82:	41 30       	cpi	r20, 0x01	; 1
  84:	a1 f5       	brne	.+104    	; 0xee <Dio_SetPinDirection+0x6c>
  86:	81 30       	cpi	r24, 0x01	; 1
  88:	89 f0       	breq	.+34     	; 0xac <Dio_SetPinDirection+0x2a>
  8a:	28 f0       	brcs	.+10     	; 0x96 <Dio_SetPinDirection+0x14>
  8c:	82 30       	cpi	r24, 0x02	; 2
  8e:	c9 f0       	breq	.+50     	; 0xc2 <Dio_SetPinDirection+0x40>
  90:	83 30       	cpi	r24, 0x03	; 3
  92:	11 f1       	breq	.+68     	; 0xd8 <Dio_SetPinDirection+0x56>
  94:	08 95       	ret
  96:	2a b3       	in	r18, 0x1a	; 26
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	02 c0       	rjmp	.+4      	; 0xa2 <Dio_SetPinDirection+0x20>
  9e:	88 0f       	add	r24, r24
  a0:	99 1f       	adc	r25, r25
  a2:	6a 95       	dec	r22
  a4:	e2 f7       	brpl	.-8      	; 0x9e <Dio_SetPinDirection+0x1c>
  a6:	82 2b       	or	r24, r18
  a8:	8a bb       	out	0x1a, r24	; 26
  aa:	08 95       	ret
  ac:	27 b3       	in	r18, 0x17	; 23
  ae:	81 e0       	ldi	r24, 0x01	; 1
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <Dio_SetPinDirection+0x36>
  b4:	88 0f       	add	r24, r24
  b6:	99 1f       	adc	r25, r25
  b8:	6a 95       	dec	r22
  ba:	e2 f7       	brpl	.-8      	; 0xb4 <Dio_SetPinDirection+0x32>
  bc:	82 2b       	or	r24, r18
  be:	87 bb       	out	0x17, r24	; 23
  c0:	08 95       	ret
  c2:	24 b3       	in	r18, 0x14	; 20
  c4:	81 e0       	ldi	r24, 0x01	; 1
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	02 c0       	rjmp	.+4      	; 0xce <Dio_SetPinDirection+0x4c>
  ca:	88 0f       	add	r24, r24
  cc:	99 1f       	adc	r25, r25
  ce:	6a 95       	dec	r22
  d0:	e2 f7       	brpl	.-8      	; 0xca <Dio_SetPinDirection+0x48>
  d2:	82 2b       	or	r24, r18
  d4:	84 bb       	out	0x14, r24	; 20
  d6:	08 95       	ret
  d8:	21 b3       	in	r18, 0x11	; 17
  da:	81 e0       	ldi	r24, 0x01	; 1
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	02 c0       	rjmp	.+4      	; 0xe4 <Dio_SetPinDirection+0x62>
  e0:	88 0f       	add	r24, r24
  e2:	99 1f       	adc	r25, r25
  e4:	6a 95       	dec	r22
  e6:	e2 f7       	brpl	.-8      	; 0xe0 <Dio_SetPinDirection+0x5e>
  e8:	82 2b       	or	r24, r18
  ea:	81 bb       	out	0x11, r24	; 17
  ec:	08 95       	ret
  ee:	41 11       	cpse	r20, r1
  f0:	37 c0       	rjmp	.+110    	; 0x160 <Dio_SetPinDirection+0xde>
  f2:	81 30       	cpi	r24, 0x01	; 1
  f4:	91 f0       	breq	.+36     	; 0x11a <Dio_SetPinDirection+0x98>
  f6:	28 f0       	brcs	.+10     	; 0x102 <Dio_SetPinDirection+0x80>
  f8:	82 30       	cpi	r24, 0x02	; 2
  fa:	d9 f0       	breq	.+54     	; 0x132 <Dio_SetPinDirection+0xb0>
  fc:	83 30       	cpi	r24, 0x03	; 3
  fe:	29 f1       	breq	.+74     	; 0x14a <Dio_SetPinDirection+0xc8>
 100:	08 95       	ret
 102:	2a b3       	in	r18, 0x1a	; 26
 104:	81 e0       	ldi	r24, 0x01	; 1
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	02 c0       	rjmp	.+4      	; 0x10e <Dio_SetPinDirection+0x8c>
 10a:	88 0f       	add	r24, r24
 10c:	99 1f       	adc	r25, r25
 10e:	6a 95       	dec	r22
 110:	e2 f7       	brpl	.-8      	; 0x10a <Dio_SetPinDirection+0x88>
 112:	80 95       	com	r24
 114:	82 23       	and	r24, r18
 116:	8a bb       	out	0x1a, r24	; 26
 118:	08 95       	ret
 11a:	27 b3       	in	r18, 0x17	; 23
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	02 c0       	rjmp	.+4      	; 0x126 <Dio_SetPinDirection+0xa4>
 122:	88 0f       	add	r24, r24
 124:	99 1f       	adc	r25, r25
 126:	6a 95       	dec	r22
 128:	e2 f7       	brpl	.-8      	; 0x122 <Dio_SetPinDirection+0xa0>
 12a:	80 95       	com	r24
 12c:	82 23       	and	r24, r18
 12e:	87 bb       	out	0x17, r24	; 23
 130:	08 95       	ret
 132:	24 b3       	in	r18, 0x14	; 20
 134:	81 e0       	ldi	r24, 0x01	; 1
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	02 c0       	rjmp	.+4      	; 0x13e <Dio_SetPinDirection+0xbc>
 13a:	88 0f       	add	r24, r24
 13c:	99 1f       	adc	r25, r25
 13e:	6a 95       	dec	r22
 140:	e2 f7       	brpl	.-8      	; 0x13a <Dio_SetPinDirection+0xb8>
 142:	80 95       	com	r24
 144:	82 23       	and	r24, r18
 146:	84 bb       	out	0x14, r24	; 20
 148:	08 95       	ret
 14a:	21 b3       	in	r18, 0x11	; 17
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	02 c0       	rjmp	.+4      	; 0x156 <Dio_SetPinDirection+0xd4>
 152:	88 0f       	add	r24, r24
 154:	99 1f       	adc	r25, r25
 156:	6a 95       	dec	r22
 158:	e2 f7       	brpl	.-8      	; 0x152 <Dio_SetPinDirection+0xd0>
 15a:	80 95       	com	r24
 15c:	82 23       	and	r24, r18
 15e:	81 bb       	out	0x11, r24	; 17
 160:	08 95       	ret

00000162 <Dio_SetPinValue>:
 162:	41 30       	cpi	r20, 0x01	; 1
 164:	a1 f5       	brne	.+104    	; 0x1ce <Dio_SetPinValue+0x6c>
 166:	81 30       	cpi	r24, 0x01	; 1
 168:	89 f0       	breq	.+34     	; 0x18c <Dio_SetPinValue+0x2a>
 16a:	28 f0       	brcs	.+10     	; 0x176 <Dio_SetPinValue+0x14>
 16c:	82 30       	cpi	r24, 0x02	; 2
 16e:	c9 f0       	breq	.+50     	; 0x1a2 <Dio_SetPinValue+0x40>
 170:	83 30       	cpi	r24, 0x03	; 3
 172:	11 f1       	breq	.+68     	; 0x1b8 <Dio_SetPinValue+0x56>
 174:	08 95       	ret
 176:	2b b3       	in	r18, 0x1b	; 27
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	02 c0       	rjmp	.+4      	; 0x182 <Dio_SetPinValue+0x20>
 17e:	88 0f       	add	r24, r24
 180:	99 1f       	adc	r25, r25
 182:	6a 95       	dec	r22
 184:	e2 f7       	brpl	.-8      	; 0x17e <Dio_SetPinValue+0x1c>
 186:	82 2b       	or	r24, r18
 188:	8b bb       	out	0x1b, r24	; 27
 18a:	08 95       	ret
 18c:	28 b3       	in	r18, 0x18	; 24
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	02 c0       	rjmp	.+4      	; 0x198 <Dio_SetPinValue+0x36>
 194:	88 0f       	add	r24, r24
 196:	99 1f       	adc	r25, r25
 198:	6a 95       	dec	r22
 19a:	e2 f7       	brpl	.-8      	; 0x194 <Dio_SetPinValue+0x32>
 19c:	82 2b       	or	r24, r18
 19e:	88 bb       	out	0x18, r24	; 24
 1a0:	08 95       	ret
 1a2:	25 b3       	in	r18, 0x15	; 21
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	02 c0       	rjmp	.+4      	; 0x1ae <Dio_SetPinValue+0x4c>
 1aa:	88 0f       	add	r24, r24
 1ac:	99 1f       	adc	r25, r25
 1ae:	6a 95       	dec	r22
 1b0:	e2 f7       	brpl	.-8      	; 0x1aa <Dio_SetPinValue+0x48>
 1b2:	82 2b       	or	r24, r18
 1b4:	85 bb       	out	0x15, r24	; 21
 1b6:	08 95       	ret
 1b8:	22 b3       	in	r18, 0x12	; 18
 1ba:	81 e0       	ldi	r24, 0x01	; 1
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	02 c0       	rjmp	.+4      	; 0x1c4 <Dio_SetPinValue+0x62>
 1c0:	88 0f       	add	r24, r24
 1c2:	99 1f       	adc	r25, r25
 1c4:	6a 95       	dec	r22
 1c6:	e2 f7       	brpl	.-8      	; 0x1c0 <Dio_SetPinValue+0x5e>
 1c8:	82 2b       	or	r24, r18
 1ca:	82 bb       	out	0x12, r24	; 18
 1cc:	08 95       	ret
 1ce:	41 11       	cpse	r20, r1
 1d0:	37 c0       	rjmp	.+110    	; 0x240 <Dio_SetPinValue+0xde>
 1d2:	81 30       	cpi	r24, 0x01	; 1
 1d4:	91 f0       	breq	.+36     	; 0x1fa <Dio_SetPinValue+0x98>
 1d6:	28 f0       	brcs	.+10     	; 0x1e2 <Dio_SetPinValue+0x80>
 1d8:	82 30       	cpi	r24, 0x02	; 2
 1da:	d9 f0       	breq	.+54     	; 0x212 <Dio_SetPinValue+0xb0>
 1dc:	83 30       	cpi	r24, 0x03	; 3
 1de:	29 f1       	breq	.+74     	; 0x22a <Dio_SetPinValue+0xc8>
 1e0:	08 95       	ret
 1e2:	2b b3       	in	r18, 0x1b	; 27
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	02 c0       	rjmp	.+4      	; 0x1ee <Dio_SetPinValue+0x8c>
 1ea:	88 0f       	add	r24, r24
 1ec:	99 1f       	adc	r25, r25
 1ee:	6a 95       	dec	r22
 1f0:	e2 f7       	brpl	.-8      	; 0x1ea <Dio_SetPinValue+0x88>
 1f2:	80 95       	com	r24
 1f4:	82 23       	and	r24, r18
 1f6:	8b bb       	out	0x1b, r24	; 27
 1f8:	08 95       	ret
 1fa:	28 b3       	in	r18, 0x18	; 24
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	02 c0       	rjmp	.+4      	; 0x206 <Dio_SetPinValue+0xa4>
 202:	88 0f       	add	r24, r24
 204:	99 1f       	adc	r25, r25
 206:	6a 95       	dec	r22
 208:	e2 f7       	brpl	.-8      	; 0x202 <Dio_SetPinValue+0xa0>
 20a:	80 95       	com	r24
 20c:	82 23       	and	r24, r18
 20e:	88 bb       	out	0x18, r24	; 24
 210:	08 95       	ret
 212:	25 b3       	in	r18, 0x15	; 21
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	02 c0       	rjmp	.+4      	; 0x21e <Dio_SetPinValue+0xbc>
 21a:	88 0f       	add	r24, r24
 21c:	99 1f       	adc	r25, r25
 21e:	6a 95       	dec	r22
 220:	e2 f7       	brpl	.-8      	; 0x21a <Dio_SetPinValue+0xb8>
 222:	80 95       	com	r24
 224:	82 23       	and	r24, r18
 226:	85 bb       	out	0x15, r24	; 21
 228:	08 95       	ret
 22a:	22 b3       	in	r18, 0x12	; 18
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	02 c0       	rjmp	.+4      	; 0x236 <Dio_SetPinValue+0xd4>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	6a 95       	dec	r22
 238:	e2 f7       	brpl	.-8      	; 0x232 <Dio_SetPinValue+0xd0>
 23a:	80 95       	com	r24
 23c:	82 23       	and	r24, r18
 23e:	82 bb       	out	0x12, r24	; 18
 240:	08 95       	ret

00000242 <Dio_SetPortDirection>:
	}
}

void Dio_SetPortDirection(u8 port,u8 Direction)
{
	switch(port)
 242:	81 30       	cpi	r24, 0x01	; 1
 244:	41 f0       	breq	.+16     	; 0x256 <Dio_SetPortDirection+0x14>
 246:	28 f0       	brcs	.+10     	; 0x252 <Dio_SetPortDirection+0x10>
 248:	82 30       	cpi	r24, 0x02	; 2
 24a:	39 f0       	breq	.+14     	; 0x25a <Dio_SetPortDirection+0x18>
 24c:	83 30       	cpi	r24, 0x03	; 3
 24e:	39 f0       	breq	.+14     	; 0x25e <Dio_SetPortDirection+0x1c>
 250:	08 95       	ret
	{
		case DIO_PORTA:
		DDRA=Direction;
 252:	6a bb       	out	0x1a, r22	; 26
		break;
 254:	08 95       	ret
		case DIO_PORTB:
		DDRB=Direction;
 256:	67 bb       	out	0x17, r22	; 23
		break;
 258:	08 95       	ret
		case DIO_PORTC:
		DDRC=Direction;
 25a:	64 bb       	out	0x14, r22	; 20
		break;
 25c:	08 95       	ret
		case DIO_PORTD:
		DDRD=Direction;
 25e:	61 bb       	out	0x11, r22	; 17
 260:	08 95       	ret

00000262 <Dio_SetPortValue>:
		break;
	}
}
void Dio_SetPortValue(u8 port,u8 value)
{
		switch(port)
 262:	81 30       	cpi	r24, 0x01	; 1
 264:	41 f0       	breq	.+16     	; 0x276 <Dio_SetPortValue+0x14>
 266:	28 f0       	brcs	.+10     	; 0x272 <Dio_SetPortValue+0x10>
 268:	82 30       	cpi	r24, 0x02	; 2
 26a:	39 f0       	breq	.+14     	; 0x27a <Dio_SetPortValue+0x18>
 26c:	83 30       	cpi	r24, 0x03	; 3
 26e:	39 f0       	breq	.+14     	; 0x27e <Dio_SetPortValue+0x1c>
 270:	08 95       	ret
		{
			case DIO_PORTA:
			PORTA=value;
 272:	6b bb       	out	0x1b, r22	; 27
			break;
 274:	08 95       	ret
			case DIO_PORTB:
			PORTB=value;
 276:	68 bb       	out	0x18, r22	; 24
			break;
 278:	08 95       	ret
			case DIO_PORTC:
			PORTC=value;
 27a:	65 bb       	out	0x15, r22	; 21
			break;
 27c:	08 95       	ret
			case DIO_PORTD:
			PORTD=value;
 27e:	62 bb       	out	0x12, r22	; 18
 280:	08 95       	ret

00000282 <LCD_SendFallingEdge>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 282:	41 e0       	ldi	r20, 0x01	; 1
 284:	63 e0       	ldi	r22, 0x03	; 3
 286:	81 e0       	ldi	r24, 0x01	; 1
 288:	0e 94 b1 00 	call	0x162	; 0x162 <Dio_SetPinValue>
 28c:	8f ec       	ldi	r24, 0xCF	; 207
 28e:	97 e0       	ldi	r25, 0x07	; 7
 290:	01 97       	sbiw	r24, 0x01	; 1
 292:	f1 f7       	brne	.-4      	; 0x290 <LCD_SendFallingEdge+0xe>
 294:	00 c0       	rjmp	.+0      	; 0x296 <LCD_SendFallingEdge+0x14>
 296:	00 00       	nop
 298:	40 e0       	ldi	r20, 0x00	; 0
 29a:	63 e0       	ldi	r22, 0x03	; 3
 29c:	81 e0       	ldi	r24, 0x01	; 1
 29e:	0e 94 b1 00 	call	0x162	; 0x162 <Dio_SetPinValue>
 2a2:	8f ec       	ldi	r24, 0xCF	; 207
 2a4:	97 e0       	ldi	r25, 0x07	; 7
 2a6:	01 97       	sbiw	r24, 0x01	; 1
 2a8:	f1 f7       	brne	.-4      	; 0x2a6 <LCD_SendFallingEdge+0x24>
 2aa:	00 c0       	rjmp	.+0      	; 0x2ac <LCD_SendFallingEdge+0x2a>
 2ac:	00 00       	nop
 2ae:	08 95       	ret

000002b0 <LCD_SendData>:
 2b0:	68 2f       	mov	r22, r24
 2b2:	80 e0       	ldi	r24, 0x00	; 0
 2b4:	0e 94 31 01 	call	0x262	; 0x262 <Dio_SetPortValue>
 2b8:	41 e0       	ldi	r20, 0x01	; 1
 2ba:	61 e0       	ldi	r22, 0x01	; 1
 2bc:	81 e0       	ldi	r24, 0x01	; 1
 2be:	0e 94 b1 00 	call	0x162	; 0x162 <Dio_SetPinValue>
 2c2:	40 e0       	ldi	r20, 0x00	; 0
 2c4:	62 e0       	ldi	r22, 0x02	; 2
 2c6:	81 e0       	ldi	r24, 0x01	; 1
 2c8:	0e 94 b1 00 	call	0x162	; 0x162 <Dio_SetPinValue>
 2cc:	0e 94 41 01 	call	0x282	; 0x282 <LCD_SendFallingEdge>
 2d0:	08 95       	ret

000002d2 <LCD_SendString>:
 2d2:	0f 93       	push	r16
 2d4:	1f 93       	push	r17
 2d6:	cf 93       	push	r28
 2d8:	8c 01       	movw	r16, r24
 2da:	c0 e0       	ldi	r28, 0x00	; 0
 2dc:	03 c0       	rjmp	.+6      	; 0x2e4 <LCD_SendString+0x12>
 2de:	0e 94 58 01 	call	0x2b0	; 0x2b0 <LCD_SendData>
 2e2:	cf 5f       	subi	r28, 0xFF	; 255
 2e4:	f8 01       	movw	r30, r16
 2e6:	ec 0f       	add	r30, r28
 2e8:	f1 1d       	adc	r31, r1
 2ea:	80 81       	ld	r24, Z
 2ec:	81 11       	cpse	r24, r1
 2ee:	f7 cf       	rjmp	.-18     	; 0x2de <LCD_SendString+0xc>
 2f0:	cf 91       	pop	r28
 2f2:	1f 91       	pop	r17
 2f4:	0f 91       	pop	r16
 2f6:	08 95       	ret

000002f8 <LCD_SendCommand>:
 2f8:	68 2f       	mov	r22, r24
 2fa:	80 e0       	ldi	r24, 0x00	; 0
 2fc:	0e 94 31 01 	call	0x262	; 0x262 <Dio_SetPortValue>
 300:	40 e0       	ldi	r20, 0x00	; 0
 302:	61 e0       	ldi	r22, 0x01	; 1
 304:	81 e0       	ldi	r24, 0x01	; 1
 306:	0e 94 b1 00 	call	0x162	; 0x162 <Dio_SetPinValue>
 30a:	40 e0       	ldi	r20, 0x00	; 0
 30c:	62 e0       	ldi	r22, 0x02	; 2
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	0e 94 b1 00 	call	0x162	; 0x162 <Dio_SetPinValue>
 314:	0e 94 41 01 	call	0x282	; 0x282 <LCD_SendFallingEdge>
 318:	08 95       	ret

0000031a <LCD_ClearScreen>:
* Parameters : nothing
* return : nothing
*/
void LCD_ClearScreen(void)
{
	LCD_SendCommand(lcd_Clear);
 31a:	81 e0       	ldi	r24, 0x01	; 1
 31c:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <LCD_SendCommand>
 320:	8f e1       	ldi	r24, 0x1F	; 31
 322:	9e e4       	ldi	r25, 0x4E	; 78
 324:	01 97       	sbiw	r24, 0x01	; 1
 326:	f1 f7       	brne	.-4      	; 0x324 <LCD_ClearScreen+0xa>
 328:	00 c0       	rjmp	.+0      	; 0x32a <LCD_ClearScreen+0x10>
 32a:	00 00       	nop
 32c:	08 95       	ret

0000032e <LCD_Init>:
 32e:	2f e7       	ldi	r18, 0x7F	; 127
 330:	88 e3       	ldi	r24, 0x38	; 56
 332:	91 e0       	ldi	r25, 0x01	; 1
 334:	21 50       	subi	r18, 0x01	; 1
 336:	80 40       	sbci	r24, 0x00	; 0
 338:	90 40       	sbci	r25, 0x00	; 0
 33a:	e1 f7       	brne	.-8      	; 0x334 <LCD_Init+0x6>
 33c:	00 c0       	rjmp	.+0      	; 0x33e <LCD_Init+0x10>
 33e:	00 00       	nop

	// 1- must wait more than 30 ms before any action (VDD rises to 4.5 v)
	_delay_ms(50);

	// All Pins as OutPut pins
	Dio_SetPortDirection ( CLCD_DATA_PORT    , DIO_PORT_OUTPUT           );
 340:	61 e0       	ldi	r22, 0x01	; 1
 342:	80 e0       	ldi	r24, 0x00	; 0
 344:	0e 94 21 01 	call	0x242	; 0x242 <Dio_SetPortDirection>
	Dio_SetPinDirection ( CLCD_CONTROL_PORT , CLCD_RS , DIO_PIN_OUTPUT  );
 348:	41 e0       	ldi	r20, 0x01	; 1
 34a:	61 e0       	ldi	r22, 0x01	; 1
 34c:	81 e0       	ldi	r24, 0x01	; 1
 34e:	0e 94 41 00 	call	0x82	; 0x82 <Dio_SetPinDirection>
	Dio_SetPinDirection  ( CLCD_CONTROL_PORT , CLCD_RW , DIO_PIN_OUTPUT  );
 352:	41 e0       	ldi	r20, 0x01	; 1
 354:	62 e0       	ldi	r22, 0x02	; 2
 356:	81 e0       	ldi	r24, 0x01	; 1
 358:	0e 94 41 00 	call	0x82	; 0x82 <Dio_SetPinDirection>
	Dio_SetPinDirection  ( CLCD_CONTROL_PORT , CLCD_EN , DIO_PIN_OUTPUT  );
 35c:	41 e0       	ldi	r20, 0x01	; 1
 35e:	63 e0       	ldi	r22, 0x03	; 3
 360:	81 e0       	ldi	r24, 0x01	; 1
 362:	0e 94 41 00 	call	0x82	; 0x82 <Dio_SetPinDirection>

	/* Return cursor to the first position on the first line  */
	LCD_SendCommand(lcd_Home);
 366:	82 e0       	ldi	r24, 0x02	; 2
 368:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <LCD_SendCommand>
 36c:	8f ec       	ldi	r24, 0xCF	; 207
 36e:	97 e0       	ldi	r25, 0x07	; 7
 370:	01 97       	sbiw	r24, 0x01	; 1
 372:	f1 f7       	brne	.-4      	; 0x370 <LCD_Init+0x42>
 374:	00 c0       	rjmp	.+0      	; 0x376 <LCD_Init+0x48>
 376:	00 00       	nop
	_delay_ms(1);

	/*FUNCTION SET Command : 2 lines , 5*8 font size */
	LCD_SendCommand( EIGHT_BITS ); // 8 Bit Mode ==> 0x38
 378:	88 e3       	ldi	r24, 0x38	; 56
 37a:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <LCD_SendCommand>
 37e:	8f ec       	ldi	r24, 0xCF	; 207
 380:	97 e0       	ldi	r25, 0x07	; 7
 382:	01 97       	sbiw	r24, 0x01	; 1
 384:	f1 f7       	brne	.-4      	; 0x382 <LCD_Init+0x54>
 386:	00 c0       	rjmp	.+0      	; 0x388 <LCD_Init+0x5a>
 388:	00 00       	nop
	_delay_ms(1); // wait more than 39 Ms

	/* DISPLAY & Cursor (ON / OFF) Control */
	LCD_SendCommand( lcd_DisplayOn_CursorOff );
 38a:	8c e0       	ldi	r24, 0x0C	; 12
 38c:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <LCD_SendCommand>
 390:	8f ec       	ldi	r24, 0xCF	; 207
 392:	97 e0       	ldi	r25, 0x07	; 7
 394:	01 97       	sbiw	r24, 0x01	; 1
 396:	f1 f7       	brne	.-4      	; 0x394 <LCD_Init+0x66>
 398:	00 c0       	rjmp	.+0      	; 0x39a <LCD_Init+0x6c>
 39a:	00 00       	nop
	_delay_ms(1);

	/* DISPLAY CLEAR */
	LCD_ClearScreen();
 39c:	0e 94 8d 01 	call	0x31a	; 0x31a <LCD_ClearScreen>

	/* ENTRY MODE  SET*/
	LCD_SendCommand( lcd_EntryMode );
 3a0:	86 e0       	ldi	r24, 0x06	; 6
 3a2:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <LCD_SendCommand>
 3a6:	8f ec       	ldi	r24, 0xCF	; 207
 3a8:	97 e0       	ldi	r25, 0x07	; 7
 3aa:	01 97       	sbiw	r24, 0x01	; 1
 3ac:	f1 f7       	brne	.-4      	; 0x3aa <LCD_Init+0x7c>
 3ae:	00 c0       	rjmp	.+0      	; 0x3b0 <LCD_Init+0x82>
 3b0:	00 00       	nop
 3b2:	08 95       	ret

000003b4 <main>:



int main(void)
{
 LCD_Init();
 3b4:	0e 94 97 01 	call	0x32e	; 0x32e <LCD_Init>
 

 
 LCD_SendString(" FIFTH DRIVER");
 3b8:	80 e6       	ldi	r24, 0x60	; 96
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	0e 94 69 01 	call	0x2d2	; 0x2d2 <LCD_SendString>
 3c0:	ff cf       	rjmp	.-2      	; 0x3c0 <main+0xc>

000003c2 <_exit>:
 3c2:	f8 94       	cli

000003c4 <__stop_program>:
 3c4:	ff cf       	rjmp	.-2      	; 0x3c4 <__stop_program>
